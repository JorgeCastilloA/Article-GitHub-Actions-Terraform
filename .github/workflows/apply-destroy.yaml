name: "Terraform Apply/Destroy"
on:
  workflow_dispatch:
    inputs:
        action:
            description: "Terraform action to perform"
            type: choice
            options:
                - Apply
                - Destroy
env:
  TF_LOG: INFO
  AWS_REGION: ${{ secrets.AWS_REGION }}
jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHub-OIDC-TERRAFORM

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.5

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        env:
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
          AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -var="region=${{secrets.AWS_REGION}}" -var="vpc-cidr=${{secrets.AWS_VPC_CIDR}}" -var="availability-zone-A=${{secrets.AWS_AZ_A}}" -var="availability-zone-B=${{secrets.AWS_AZ_B}}" -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event.inputs.action == 'Apply'
        run: terraform apply -var="region=${{secrets.AWS_REGION}}" -var="vpc-cidr=${{secrets.AWS_VPC_CIDR}}" -var="availability-zone-A=${{secrets.AWS_AZ_A}}" -var="availability-zone-B=${{secrets.AWS_AZ_B}}" -auto-approve -input=false

      - name: Terraform Destroy
        if: github.ref == 'refs/heads/master' && github.event.inputs.action == 'Destroy'
        run: terraform destroy -var="region=${{secrets.AWS_REGION}}" -var="vpc-cidr=${{secrets.AWS_VPC_CIDR}}" -var="availability-zone-A=${{secrets.AWS_AZ_A}}" -var="availability-zone-B=${{secrets.AWS_AZ_B}}" -auto-approve  


        